// Generated by gencpp from file robot_planning/CartesianInterpolation.msg
// DO NOT EDIT!


#ifndef ROBOT_PLANNING_MESSAGE_CARTESIANINTERPOLATION_H
#define ROBOT_PLANNING_MESSAGE_CARTESIANINTERPOLATION_H

#include <ros/service_traits.h>


#include <robot_planning/CartesianInterpolationRequest.h>
#include <robot_planning/CartesianInterpolationResponse.h>


namespace robot_planning
{

struct CartesianInterpolation
{

typedef CartesianInterpolationRequest Request;
typedef CartesianInterpolationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CartesianInterpolation
} // namespace robot_planning


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robot_planning::CartesianInterpolation > {
  static const char* value()
  {
    return "704fa7f95d1d0a395781e62e40e60c7e";
  }

  static const char* value(const ::robot_planning::CartesianInterpolation&) { return value(); }
};

template<>
struct DataType< ::robot_planning::CartesianInterpolation > {
  static const char* value()
  {
    return "robot_planning/CartesianInterpolation";
  }

  static const char* value(const ::robot_planning::CartesianInterpolation&) { return value(); }
};


// service_traits::MD5Sum< ::robot_planning::CartesianInterpolationRequest> should match
// service_traits::MD5Sum< ::robot_planning::CartesianInterpolation >
template<>
struct MD5Sum< ::robot_planning::CartesianInterpolationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robot_planning::CartesianInterpolation >::value();
  }
  static const char* value(const ::robot_planning::CartesianInterpolationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_planning::CartesianInterpolationRequest> should match
// service_traits::DataType< ::robot_planning::CartesianInterpolation >
template<>
struct DataType< ::robot_planning::CartesianInterpolationRequest>
{
  static const char* value()
  {
    return DataType< ::robot_planning::CartesianInterpolation >::value();
  }
  static const char* value(const ::robot_planning::CartesianInterpolationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robot_planning::CartesianInterpolationResponse> should match
// service_traits::MD5Sum< ::robot_planning::CartesianInterpolation >
template<>
struct MD5Sum< ::robot_planning::CartesianInterpolationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robot_planning::CartesianInterpolation >::value();
  }
  static const char* value(const ::robot_planning::CartesianInterpolationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_planning::CartesianInterpolationResponse> should match
// service_traits::DataType< ::robot_planning::CartesianInterpolation >
template<>
struct DataType< ::robot_planning::CartesianInterpolationResponse>
{
  static const char* value()
  {
    return DataType< ::robot_planning::CartesianInterpolation >::value();
  }
  static const char* value(const ::robot_planning::CartesianInterpolationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_PLANNING_MESSAGE_CARTESIANINTERPOLATION_H
